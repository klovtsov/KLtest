!4 Test systems
!include <AutoTestsWebDrv.PlatformsTesting.EdmzSpcw2
!define systemNetBiosName {W2K8R2SRV}
!define dcAddress {10.30.46.102}
!define dcFunctAcct {administrator}
!define psmFunctAccnt {psmparmaster}
!define DomainName {parsec.spb.qsft}
!define NETBIOSDomainName {PARSEC}
!define dcFunctAcctPwd {=1qwerty}

!4 Users and their logins
!define ManagedAccount {${prefix}locAccnt}
!define ManagedAccountPwd {P@r0leAA}
!define domainUser {${prefix}domAcc}
!define domUserPwd {T0PsecReT}
!define domUserUpnName {${domainUser}@${DomainName}}
!define domUserNetBiosName {${NETBIOSDomainName}\\${domainUser}}
!define localUserNetBiosName {${systemNetBiosName}\\${ManagedAccount}}
!*> Some other useful variables
!define PolicyName {Approver-Requestor}
!define PlaceHolder {:prompt:}
!define goodProxyType {RDP - Interactive Login}
!define sshProxyType {RDP Through SSH - Interactive Login}
!define pause {30000}
!define expectedImageOnScreen {psmRecycleBin.png,psmSrvrMngr.png,PrepareDesktop.png}
*!

!include -c <AutoTestsWebDrv.FileTransfer.ScenarioLibrary
!include -c <AutoTestsWebDrv.ScenarioLibrary
!include -c <AutoTestsWebDrv.PowerShellNetApiScenarios.ScenarioLibrary
!include -c <AutoTestsWebDrv.PsmSmokeTest.ScenarioLibrary
!include -c <AutoTestsWebDrv.SessionArchiving.ScenarioLibrary
!include -c <PromptPlaceholder.InteractiveLoginWithNla.TestSpecific

!*> Prepare environment: Add systems, accounts, create user and set permissions
!|script                                                                                                                                                 |
|Add system                |${SystemName}   |with address |${SystemAddress}|platform|"${SystemPlatform}"|additional parameters|-functAcct ${ParFunctAcct}|
|Set PSM Functional Account|${psmFunctAccnt}|for system   |${SystemName}                                                                                 |
|Create Account on System                                                                                                                                |
|Create account in AD      |${domainUser}   |with password|${domUserPwd}                                                                                 |
|Set Permissions           |${PolicyName}   |on system    |${SystemName}   |for user|${Requestor}                                                        |
|Show Desktop                                                                                                                                            |
|Create placeholder account|${PlaceHolder}                                                                                                               |
|Set required approvers    |0                                                                                                                            |
|Request Session                                                                                                                                         |
*!

!4 Check login when NLA is disabled
!|script                                                                         |
|Check is NLA active    |False                |on computer  |${systemNetBiosName}|
|Open session by account|${domUserUpnName}    |with password|${domUserPwd}       |
|Open session by account|${domUserNetBiosName}|with password|${domUserPwd}       |

!4 Set NLA is ON and check login again
!|script                                                                           |
|Set NLA setting        |1                      |on computer  |${systemNetBiosName}|
|Open session by account|${domUserUpnName}      |with password|${domUserPwd}       |
|Open session by account|${domUserNetBiosName}  |with password|${domUserPwd}       |
|Open session by account|${localUserNetBiosName}|with password|${ManagedAccountPwd}|

!4 Work through DPA
!|script                                                                           |
|Set PSM Affinity       |${SystemName}          |Local Server |2     |DPA    |1    |
|Open session by account|${domUserUpnName}      |with password|${domUserPwd}       |
|Open session by account|${domUserNetBiosName}  |with password|${domUserPwd}       |
|Open session by account|${localUserNetBiosName}|with password|${ManagedAccountPwd}|

!4 Specified domain account
!|script                                                                                                                                         |
|Cancel psm request                                                                                                                              |
|Add account                              |${domUserUpnName}|on system    |${SystemName}|with options|-MinimumApprovers 0 -Password ${domUserPwd}|
|Enable PSM for                           |${domUserUpnName}|with options |-proxyType "${goodProxyType}" -minApprovers 0                         |
|Make first Request Session to            |${domUserUpnName}|on system    |${SystemName}|by          |${Requestor}                               |
|Open RDP interactive session with request|$firstReqId      |with password|${domUserPwd}                                                         |

!4 Check that RDP through SSH is also possible
!|script                                                                                                                          |
|Update PSM settings for                  |${domUserUpnName}|on system    |${SystemName}|with options|-proxyType "${sshProxyType}"|
|Open RDP interactive session with request|$firstReqId      |with password|${domUserPwd}                                          |
|Cancel psm request with Id               |$firstReqId      |by           |${Requestor}                                           |

!*> Remove system and users
!|script                                                       |
|Set NLA setting            |0|on computer|${systemNetBiosName}|
|Delete system              |${SystemName}                     |
|Delete Account on System   |${ManagedAccount}                 |
|Delete Account on AD System|${domainUser}                     |
|Session Cleanup            |${domUserUpnName}                 |
|Session Cleanup            |${ManagedAccount}                 |
*!