!|scenario   |Create Password Rule|pwdRuleName |
|clickAndWait|link=Password Rules              |
|click       |id=NewRuleButton                 |
|type;       |id=PwdRuleName      |@pwdRuleName|
|type;       |id=PwdRuleDesc      |Test rule   |
|click       |id=SubmitChangesButton           |
#|clickAndWait|id=homeButton                    |

!|scenario   |Select Password Rule     |pwdRuleName            |
|clickAndWait|link=Password Rules                              |
|select;     |id=PasswordRuleID        |label=@pwdRuleName     |
|click       |//select/option[contains(text(), "@pwdRuleName")]|

!|scenario           |Delete Password Rule|pwdRuleName|
|Select Password Rule|@pwdRuleName                    |
|click               |id=DeleteRuleButton             |
|getConfirmation                                      |

!|scenario|Set        |setting|equal to|value|
|type;    |id=@setting|@value                |

!|scenario|Select value|value|for|setting|
|select;  |id=@setting |label=@value     |

!|scenario|Set Valid Non Alpha Numeric Symbols|validSymbols |
|type;    |id=ValidNonAN                      |@validSymbols|

!|scenario        |Set requests auto-approved                                                                               |
|$res=            |CLI|${CLIBatch} UpdateAccount --System ${SystemName} --AccountName ${ManagedAccount} --MinimumApprovers 0|
|Verify_Contain_OR|$res;;successful                                                                                         |

!|scenario        |Set ISA Permissions|username                                                                                                                                         |
|$res=            |CLI                |${CLIBatch} SetAccessPolicy --AccessPolicyName "ISA" --Action ADD --SystemName ${SystemName} --AccountName ${ManagedAccount} --UserName @username|
|Verify_Contain_OR|$res;;successful                                                                                                                                                     |

!|scenario     |Get Generated Password                                                              |
|$GeneratedPwd=|CLI|${CLIBatch} Retrieve --SystemName ${SystemName}  --AccountName ${ManagedAccount}|

!|scenario        |Assign Password Rule|passwdRuleName                         |to account                        |account                        |
|$res=            |CLI                 |${CLIBatch} UpdateAccount --SystemName ${SystemName} --AccountName @account --PasswordRule @passwdRuleName|
|Verify_Contain_OR|$res;;successful                                                                                                               |

!|scenario        |Assign Password Rule|passwdRuleName              |to Sync Password              |SyncPwdName              |
|$res=            |CLI                 |${CLIBatch} UpdateSyncPass --SyncPassName @SyncPwdName --PasswordRule @passwdRuleName|
|Verify_Contain_OR|$res;;successful                                                                                          |

!|scenario        |Set new Sync Password value|pwdValue                      |                      |result                      |
|$res=            |CLI                        |${CLIBatch} UpdateSyncPass --SyncPassName ${SyncPasswordName} --Password @pwdValue|
|Verify_Contain_OR|$res;;@result                                                                                                 |

!|scenario        |Drop subscriber|subscriber                             |from                             |SyncPwdName                             |
|$res=            |CLI            |${CLIBatch} DropSyncPwdSub --SyncPassName ${SyncPasswordName} --SystemName ${SystemName} --AccountName @subscriber|
|Verify_Contain_OR|$res;;successfully                                                                                                                |
