!| scenario       |Add system                                                                                                                                                            |
|$res=            |NetAPI|${APIBatch} ${CommandTimeout} AddSystem ${SystemName} ${SystemAddress} "${SystemPlatform}" "${SystemDescription}" ${SystemTimeout} ${FunctAcct} ${FunctAcctPwd}|
|Verify_Contain_OR|$res;;successful                                                                                                                                                      |

!| scenario       |Test System|testRes                                               |
|$res=            |NetAPI     |${APIBatch} ${CommandTimeout} TestSystem ${SystemName}|
|Verify_Contain_OR|$res;;@testRes                                                    |

!| scenario       |Set Password|acc                   |                   |passwd                   |
|$res=            |NetAPI      |${APIBatch} ${CommandTimeout} SetPassword ${SystemName} @acc @passwd|
|Verify_Contain_OR|$res;;${NotFailed}                                                               |

!| scenario       |Check Password|acc                 |                 |testRes                |
|$res=            |NetAPI        |${APIBatch} ${CommandTimeout} CheckPassword ${SystemName} @acc|
|Verify_Contain_OR|$res;;@testRes                                                               |

!| scenario|Remove account                      |accName                      |
|NetAPI    |${APIBatch} ${CommandTimeout} RemoveAccount ${SystemName} @accName|


!| scenario       |Remove system|sysName                                            |
|$res=            |NetAPI       |${APIBatch} ${CommandTimeout} DeleteSystem @sysName|
|Verify_Contain_OR|$res;;successful                                                 |

!| scenario       |Add account|acc                        |with password                       |pwd                       |                       |testRes                       |
|$Months=         |getEval    |var d = new Date();d.setMinutes(d.getMinutes()+1); d.setDate(d.getDate()+1);var s = d.getMonth()+1;if ((s + "").length == 1) s = "0" + s;return s;|
|$Days=           |getEval    |var d = new Date();d.setMinutes(d.getMinutes()+1); d.setDate(d.getDate()+1);var s = d.getDate(); if ((s + "").length == 1) s = "0" + s;return s;  |
|$Years=          |getEval    |var d = new Date();d.setMinutes(d.getMinutes()+1); d.setDate(d.getDate()+1); return d.getFullYear();                                              |
|$res=            |NetAPI     |${APIBatch} ${CommandTimeout} AddAccount ${SystemName} @acc @pwd $Months/$Days/$Years                                                             |
|Verify_Contain_OR|$res;;@testRes                                                                                                                                                |

!| scenario       |Add PPM account|accnt   |with password   |pwd   |and profiles   |checkProfile   |   |changeProfile   |  |testRes  |
|$res=            |NetAPI         |${APIBatch} ${CommandTimeout} AddPpmAccount ${SystemName} @accnt @pwd @checkProfile @changeProfile|
|Verify_Contain_OR|$res;;@testRes                                                                                                    |

!| scenario       |Reset Password|acc                 |                 |testRes                |
|$res=            |NetAPI        |${APIBatch} ${CommandTimeout} ResetPassword ${SystemName} @acc|
|Verify_Contain_OR|$res;;@testRes                                                               |

!|scenario        |Set User Permissions|userName                                                                                                          |
|$res=            |NetAPI              |${APIBatch} ${CommandTimeout} SetUserPermission ${SystemName} ${ManagedAccount} "Approver-Requestor" ADD @userName|
|Verify_Contain_OR|$res;;successful                                                                                                                       |

!|scenario        |Revoke User Permissions|userName                                                                                                           |
|$res=            |NetAPI                 |${APIBatch} ${CommandTimeout} SetUserPermission ${SystemName} ${ManagedAccount} "Approver-Requestor" DROP @userName|
|Verify_Contain_OR|$res;;successful                                                                                                                           |

!| scenario       |Request Pwd                                                                                                   |
|$res=            |NetAPI       |${APIBatch} ${CommandTimeout} RequestPassword ${SystemName} ${ManagedAccount} ${API_user_1} test|
|Verify_Contain_OR|$res;;submitted                                                                                               |
|$RequestID=      |get_RequestID|$res                                                                                            |

!| scenario       |Approve Pwd                                                     |
|$res=            |NetAPI|${APIBatch2} ${CommandTimeout} ApprovePassword $RequestID|
|Verify_Contain_OR|$res;;submitted                                                 |

!| scenario             |Get Login                                                       |
|$GeneratedPwd=         |NetAPI|${APIBatch} ${CommandTimeout} RetrievePassword $RequestID|
|Login Account to System|$GeneratedPwd                                                   |


!| scenario    |Managed System                           |
|Create Account on System                                |
|Open          |${TPAMURL}  ||${TPAMAdmin}||${DefaultPwd}|
|Add system                                              |
|Test System   |${TestSystemSuccessful}                  |
|Set password  |${FunctAcct}||${FunctAcctWrongPwd}       |
|Test System   |${TestSystemFailed}                      |
|Check Password|${FunctAcct}||${CheckPasswordFailed}     |

!| scenario                       |Managed Account                                                                                                                                           |
|Add PPM account                  |${ManagedAccount}|with password|${ManagedAccountPwd}   |and profiles|${PpmCheckProfile}                ||${PpmChangeProfile}                ||${NotFailed}|
|Inspect Scheduled Password Check and Change|Failed                                                                                                                                             |
|Reset Password                   |${ManagedAccount}|             |${ResetPasswordFailed}                                                                                                    |
|Check Password                   |${ManagedAccount}                    |             |${ManAccntCheckPassword}                                                                                    |
|Remove account                   |${ManagedAccount}                                                                                                                                         |
|Change Account Password on System|${ManagedAccountPwdNew}                                                                                                                                   |
|Set password                     |${FunctAcct}     |             |${FunctAcctPwd}                                                                                                           |
|pause                            |${RestoreFunctAcctPasswordTimeout}                                                                                                                        |
|Add PPM account                  |${ManagedAccount}|with password|${ManagedAccountPwd}   |and profiles|${PpmCheckProfile}                ||${PersistentPasswordChangeProfile1}||${NotFailed}|
|Schedule Check Password          |Failed                                                                                                                                                    |
|pause                            |${PpmScheduleTimeWindow}                                                                                                                                  |
|Check Status                               |${ResetPasswordSuccessful}|for reason   |Mismatch                                                                                                  |
|Remove account                   |${ManagedAccount}                                                                                                                                         |
|Change Account Password on System|${ManagedAccountPwdNew}                                                                                                                                   |
|Add PPM account                  |${ManagedAccount}|with password|${ManagedAccountPwdNew}|and profiles|${PpmCheckProfile}                ||${PersistentPasswordChangeProfile1}||${NotFailed}|
|Schedule Check Password          |Success                                                                                                                                                   |
|Remove account                   |${ManagedAccount}                                                                                                                                         |
|Add PPM account                  |${ManagedAccount}                    |with password|${ManagedAccountPwd}   |and profiles|${PpmCheckProfile}||${PpmChangeProfile}                ||${NotFailed}|
|Inspect Scheduled Password Check and Change|Success                                                                                                                                            |
|Reset Password                   |${ManagedAccount}                    |             |${ResetPasswordSuccessful}                                                                                |
|Check Password                   |${ManagedAccount}                    |             |${CheckPasswordSuccessful}                                                                                |

!| scenario        |Inspect Scheduled Password Check and Change|changeResExpt                                                                                                 |
|pause         |${PpmScheduleTimeWindow}                                                                       |
|$res=             |GroovyWebDriver                            |inspectCheckAndResetLogs;${TPAMHost};${TPAMAdmin};${DefaultPwd};${SystemName};${ManagedAccount};@changeResExpt|
|Verify_Contain_NOT|$res;;Something went wrong                                                                                                                                |
|Verify_Contain_OR |$res;;Scheduled Check and Change were as expected.                                                                                                        |

!| scenario          |Request Password and Login |
|Set User Permissions|${API_user_1}              |
|Set User Permissions|${API_user_2}              |
|pause               |${ApplyNewPoliciesInterval}|
|Request Pwd                                     |
|Approve Pwd                                     |
|Get Login                                       |

!|scenario     |Account Not there                               |
|Add account   |AccNotThere|with password|master | |${NotFailed}|
|Reset Password|AccNotThere|             |${ResetPasswordFailed}|
|Check Password|AccNotThere|             |${CheckPasswordFailed}|

!|scenario        |System Unreachable                                                                |
|$res=            |NetAPI           |${APIBatch} ${CommandTimeout} UpdateSystem ${SystemName} 1.2.3.4|
|Verify_Contain_OR|$res;;${NotFailed}                                                                |
|Test System      |${TestSystemFailed}                                                               |
|Reset Password   |${ManagedAccount}|                     |${ResetPasswordFailed}                    |
|Check Password   |${ManagedAccount}|                     |${CheckPasswordFailed}                    |

!|scenario        |Set description|accDescrptn                      |for                     |account                     |
|$res=            |NetAPI         |${APIBatch} ${CommandTimeout} SetAccountDescription ${SystemName} @account @accDescrptn|
|Verify_Contain_OR|$res;;${NotFailed}                                                                                     |

!|scenario        |Set account DN|accDN                   |for                  |account                  |
|$res=            |NetAPI        |${APIBatch} ${CommandTimeout} SetAccountDN ${SystemName} @account @accDN|
|Verify_Contain_OR|$res;;${NotFailed}                                                                     |

