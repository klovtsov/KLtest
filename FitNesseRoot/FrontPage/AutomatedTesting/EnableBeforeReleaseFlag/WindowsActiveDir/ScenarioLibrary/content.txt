!contents

!| scenario       |Add System|systemName                      |                     |systemAddress                     |                     |systemPlatform                     |                     |functAcct                     |                     |funcAccPwd                     |
|$res=            |CLI       |${CLIBatch} AddSystem --SystemName @systemName --NetworkAddress @systemAddress --PlatformName \"@systemPlatform\" --FunctionalAccount @functAcct --FuncAcctCred @funcAccPwd --DomainName ${DomainName} --NetBiosName ${NETBIOSDomainName} --ReleaseDuration 15|
|Verify_Contain_OR|$res;;successful                                                                                                                                                                                                                                                         |


!|scenario       |Manage Account Status on System                 |accountName                |                |operation                |
|PowerShellScript|manageEnabledAccountStatus.ps1 @operation ${SystemAddress} ${NETBIOSDomainName}\${FunctAcct} ${FuncAccPwd} @accountName|

!|scenario        |Is Account Enabled|accountName                                |                                |result                                |
|$res=            |PowerShellScript  |manageEnabledAccountStatus.ps1 status ${SystemAddress} ${NETBIOSDomainName}\${FunctAcct} ${FuncAccPwd} @accountName|
|Verify_Contain_OR|$res;;@result                                                                                                                         |


!|scenario                        |Check Session Opened and Account Enabled            |
|Set UI Enable Before Release Flag|${ManagedAccount3}                                  |
|Check Forced Account Settings    |${ManagedAccount3}                                  |
|Update PSM Details               |${ManagedAccount3}                                  |
|Is Account Enabled               |${ManagedAccount3}||False                           |
|Request Session                  |${SystemName}     ||${ManagedAccount3}||${Requestor}|
|Open Session                     |${Requestor}                                        |
|Is Account Enabled               |${ManagedAccount3}||True                            |
|pause                            |960000                                              |
|Is Account Enabled               |${ManagedAccount3}||False                           |
|Check Post Release Reset         |${ManagedAccount3}                                  |


!| scenario       |Add Dependent System|systemName            |            |systemAddress            |            |systemPlatform            |            |functAcct            |            |funcAccPwd           |
|$res=            |CLI                 |${CLIBatch} AddSystem --SystemName @systemName --NetworkAddress @systemAddress --PlatformName \"@systemPlatform\" --FunctionalAccount @functAcct --FuncAcctCred @funcAccPwd|
|Verify_Contain_OR|$res;;successful                                                                                                                                                                                |


!|scenario        |Assign|System                       |as dependent from                       |Account                       |
|$res=            |CLI   |${CLIBatch} UpdateDependentSystems --SystemName ${SystemName} --AccountName @Account --Assign @System|
|Verify_Contain_OR|$res;;successful                                                                                            |

!|scenario        |Unassign|System                        |as dependent from                        |Account                       |
|$res=            |CLI     |${CLIBatch} UpdateDependentSystems --SystemName ${SystemName} --AccountName @Account --Unassign @System|
|Verify_Contain_OR|$res;;successful                                                                                                |

!|scenario           |Enable Before Release Flag Cannot Be Set If There Are Dependent Systems                 |
|Add Dependent System|${DependentSystemName}|                 |192.168.33.33||Windows||Administrator||grain41R|
|Assign              |${DependentSystemName}|as dependent from|${ManagedAccount1}                             |
|Login               |${TPAMURL}            |                 |${TPAMAdmin} ||${DefaultPwd}                   |
|Choose Account      |${ManagedAccount1}                                                                      |
|pause               |3000                                                                                    |
|click               |id=Details                                                                              |
|pause               |1000                                                                                    |
|click               |id=cb_EnableBeforeReleaseFl                                                             |
|pause               |1000                                                                                    |
|click               |id=SubmitChangesButton                                                                  |
|waitForTextPresent  |Enable Before Release can not be set when there are dependent systems                   |
|$res=               |getText               |//div[@id='ResultsDiv']                                          |
|Verify_Contain_OR   |$res;;Enable Before Release can not be set when there are dependent systems             |
|click               |id=cb_EnableBeforeReleaseFl                                                             |
|Unassign            |${DependentSystemName}|as dependent from|${ManagedAccount1}                             |
|Remove System       |${DependentSystemName}                                                                  |
|Hard-Delete System  |${DependentSystemName}                                                                  |


!| scenario       |Set Non-Privileged Functional Account Flag|flag                                                                       |
|$res=            |CLI                                       |${CLIBatch} UpdateSystem --SystemName ${SystemName} --NonPrivFuncFlag @flag|
|Verify_Contain_OR|$res;;successful                                                                                                      |

!|scenario                                 |Check That EnableBeforeReleaseFlag Checkbox Is Disabled When Funcacct Is Non-Privileged|
|Set Non-Privileged Functional Account Flag|Y                                                                                      |
|Check EnableBeforeReleaseFlag Checkbox    |${ManagedAccount1} | |Enable Account before Release checkbox is displayed and disabled |
|Check EnableBeforeReleaseFlag Checkbox    |${ManagedAccount2} | |Enable Account before Release checkbox is displayed and disabled |
|Check EnableBeforeReleaseFlag Checkbox    |${ManagedAccount3} | |Enable Account before Release checkbox is displayed and disabled |
|Set Non-Privileged Functional Account Flag|N                                                                                      |

!|scenario                                  |Check Cannot Disable Account Alert                                                        |
|Request Password                           |${SystemName}     ||${ManagedAccount3}     |     |${Requestor}                            |
|Retrieve Password                          |${Requestor}                                                                              |
|Manage Account Status on System            |${ManagedAccount1}||enable                                                                |
|Is Account Enabled                         |${ManagedAccount1}||True                                                                  |
|Change Funcacct Write Permission on Account|${ManagedAccount3}||$GeneratedPwd          |     |${ManagedAccount1}     |     |Deny      |
|Manual Reset Password                      |${ManagedAccount1}||The password .*was successfully changed.*Unable to disable the account|
|pause                                      |180000                                                                                    |
|Check Email Alert                          |An error occurred disabling the account ${ManagedAccount1} on ${SystemName}               |
|Is Account Enabled                         |${ManagedAccount1}||True                                                                  |
|Change Funcacct Write Permission on Account|${ManagedAccount3}||$GeneratedPwd          |     |${ManagedAccount1}     |     |Allow     |
|Cancel Password Request                    |${Requestor}                                                                              |
|Manage Account Status on System            |${ManagedAccount1}||disable                                                               |


!|scenario       |Change Funcacct Write Permission on Account     |logonAccountName     |     |logonAccountPassword     |     |changedAccountName     |    |permission    |
|PowerShellScript|manageAccountWritePermission.ps1 @permission ${SystemAddress} @logonAccountName @logonAccountPassword @changedAccountName ${FunctAcct} ${UsersContainer}|
